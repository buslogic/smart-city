name: Deploy Backend to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - 'apps/backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: smart-city/backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./apps/backend
        run: npm ci
      
      - name: Run linter
        working-directory: ./apps/backend
        run: npm run lint
        continue-on-error: true
      
      - name: Run tests
        working-directory: ./apps/backend
        run: npm test --passWithNoTests
        continue-on-error: true

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 1200
      
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
                       -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                       -f apps/backend/Dockerfile \
                       apps/backend/
      
      - name: Push Docker images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Login to DigitalOcean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            
            # Stop existing container if running
            docker stop backend-app || true
            docker rm backend-app || true
            
            # Pull latest image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            # Run new container
            docker run -d \
              --name backend-app \
              --restart unless-stopped \
              -p 3010:3010 \
              --env-file /root/apps/backend/.env.production \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            # Health check
            sleep 10
            curl -f http://localhost:3010/api/health || exit 1
            
            echo "Deployment successful!"