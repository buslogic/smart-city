name: Deploy Backend to Production

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  # Validation job - validates Prisma schema before deployment
  validate:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: smartcity_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/backend/package-lock.json

      - name: Install dependencies
        working-directory: ./apps/backend
        run: npm ci

      - name: Setup test environment
        working-directory: ./apps/backend
        run: |
          echo 'DATABASE_URL="mysql://root:root@localhost:3306/smartcity_test"' > .env

      - name: Validate on empty database
        working-directory: ./apps/backend
        run: |
          echo "üîç Validating migrations on empty database..."
          npx prisma generate
          npx prisma migrate deploy
          npx prisma migrate status

      - name: Setup SSH for production database validation
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

      - name: Validate on Production Server Database
        env:
          HOST: ${{ secrets.PRODUCTION_HOST }}
          USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          echo "üîç Validating migrations against production database..."
          ssh -i ~/.ssh/deploy_key $USER@$HOST << 'EOF'
            set -e
            cd /root/smart-city/apps/backend

            # Check migration status on production
            echo "üìã Checking migration status on production database..."
            npx prisma migrate status || {
              echo "‚ùå Migration check failed on production database!"
              echo "‚ö†Ô∏è  There are pending migrations or schema drift."
              echo "üìù Please review and apply migrations manually if needed."
              exit 1
            }

            echo "‚úÖ Migration validation successful on production database!"
          EOF

  deploy:
    needs: validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts 2>/dev/null
          echo "SSH setup completed"

      - name: Deploy to Production
        env:
          HOST: ${{ secrets.PRODUCTION_HOST }}
          USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          echo "üöÄ Starting deployment to production server..."

          # SSH to server and execute deployment
          ssh -i ~/.ssh/id_rsa $USER@$HOST << 'ENDSSH'
            set -e
            cd /root/smart-city

            # Pull latest changes
            echo "üì• Pulling latest changes..."
            git pull origin main

            # Install dependencies
            echo "üì¶ Installing dependencies..."
            cd apps/backend
            npm ci

            # Generate Prisma client
            echo "üîß Generating Prisma client..."
            npx prisma generate

            # Apply migrations
            echo "üóÑÔ∏è Applying database migrations..."
            npx prisma migrate deploy

            # Restart backend service
            echo "‚ôªÔ∏è Restarting backend service..."
            pm2 restart smart-city-backend || pm2 start npm --name smart-city-backend -- run start:prod

            echo "‚úÖ Deployment completed!"
          ENDSSH

      - name: Verify deployment
        run: |
          echo "üîç Verifying deployment..."
          sleep 10
          curl -f https://api.smart-city.rs/health || echo "Warning: Health check failed, but deployment may still be successful"
          echo "‚úÖ Deployment verification completed!"

      - name: Send notification on success
        if: success()
        run: |
          echo "‚úÖ Backend deployed successfully to production!"
          echo "üìç API URL: https://api.smart-city.rs"

      - name: Send notification on failure
        if: failure()
        run: |
          echo "‚ùå Backend deployment failed!"
          echo "Please check the logs for more information."