name: Build Universal Backend Image

on:
  workflow_dispatch:
    inputs:
      tag_suffix:
        description: 'Tag suffix for universal image (e.g. v1, test, etc.)'
        required: false
        default: 'v1'
        type: string

jobs:
  # Build universal Docker image without Prisma generate during build
  build-universal:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DigitalOcean Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Generate universal image tag
        id: tag
        run: |
          TAG_SUFFIX="${{ github.event.inputs.tag_suffix || 'v1' }}"
          UNIVERSAL_TAG="universal-${TAG_SUFFIX}"
          echo "universal_tag=${UNIVERSAL_TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${UNIVERSAL_TAG}"

      - name: Build and push Universal Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/backend
          file: ./apps/backend/Dockerfile.universal
          push: true
          tags: |
            registry.digitalocean.com/smart-city/backend:${{ steps.tag.outputs.universal_tag }}
            registry.digitalocean.com/smart-city/backend:universal-latest
          cache-from: type=registry,ref=registry.digitalocean.com/smart-city/backend:universal-buildcache
          cache-to: type=registry,ref=registry.digitalocean.com/smart-city/backend:universal-buildcache,mode=max

      - name: Image build summary
        run: |
          echo "🎉 Universal Backend Image Built Successfully!"
          echo "📦 Registry: registry.digitalocean.com/smart-city/backend"
          echo "🏷️  Tags:"
          echo "   - ${{ steps.tag.outputs.universal_tag }}"
          echo "   - universal-latest"
          echo ""
          echo "ℹ️  This image does NOT include Prisma client generation during build."
          echo "   Prisma client will be generated at runtime with correct DATABASE_URL."
          echo ""
          echo "🚀 Usage in Kubernetes:"
          echo "   kubectl set image deployment/litas-backend backend=registry.digitalocean.com/smart-city/backend:${{ steps.tag.outputs.universal_tag }} -n litas-smart-city"