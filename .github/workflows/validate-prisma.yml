name: Validate Prisma Schema

on:
  push:
    paths:
      - 'apps/backend/prisma/schema.prisma'
      - 'apps/backend/prisma/migrations/**'
  pull_request:
    paths:
      - 'apps/backend/prisma/schema.prisma'
      - 'apps/backend/prisma/migrations/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: smartcity_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/backend/package-lock.json

      - name: Install dependencies
        working-directory: ./apps/backend
        run: npm ci

      - name: Setup test environment
        working-directory: ./apps/backend
        run: |
          # Create .env file with test database URL
          echo 'DATABASE_URL="mysql://root:root@localhost:3306/smartcity_test"' > .env

      - name: Setup database
        working-directory: ./apps/backend
        run: |
          # Generate Prisma client
          npx prisma generate
          # Apply all migrations to test database
          npx prisma migrate deploy

      - name: Run Prisma validation
        working-directory: ./apps/backend
        env:
          CI: false  # Run full validation
          SKIP_MIGRATION_CHECK: false
        run: |
          npx ts-node scripts/validate-prisma-schema.ts

      - name: Upload validation report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: prisma-validation-report
          path: apps/backend/prisma-validation-*.json